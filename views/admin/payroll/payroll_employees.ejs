<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Employee Management</title>
  <style>
    body.employee-page {
      margin: 0;
      font-family: Arial, sans-serif;
      background-color: #f5f7fa;
      color: #333;
      font-size: 12px;
    }
    h2 {
      font-size: 20px;
      color: #333;
      margin-bottom: 15px;
    }
    button {
      padding: 4px 12px;
      font-size: 12px;
      border: 1px solid #066da5;
      border-radius: 4px;
      background-color: #fff;
      cursor: pointer;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      font-size: 12px;
    }
    th, td {
      border: 1px solid #ccc;
      padding: 4px;
      text-align: center;
      font-weight: normal;
    }
    .top-section, .bottom-section {
      padding: 10px;
    }
    input[type="text"], input[type="email"], input[type="number"], input[type="date"] {
      padding: 4px;
      font-size: 12px;
      border: 1px solid #ccc;
      border-radius: 4px;
      height: 24px;
    }
    .table-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .form {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      width: 100%;
      justify-content: space-between;
    }
    .form input {
      flex: 1 1 auto;
    }
    .compact-form {
      padding: 1rem;
    }
    .compact-table th {
      background-color: #f0f8ff;
      position: sticky;
      top: 0;
      z-index: 2;
    }
    .compact-table tbody tr:hover {
      background-color: #e9f5ff;
    }
    .address-col { min-width: 150px; }
    .name-col, .email-col { min-width: 120px; }
    .date-col { min-width: 100px; }
    .id-col { min-width: 50px; }
  </style>
</head>

<body class="employee-page">

<!-- ✅ 상단 입력 폼 + 버튼 -->
<div class="top-section compact-form">
  <div class="table-header">
    <h2>Input, Search, Edit, Delete</h2>
  </div>

  <form id="employeeForm" action="/admin/payroll/payroll_employees/add" method="post" class="form">
    <!-- 인적사항 입력폼 전체 -->
    <input type="text" name="status" placeholder="Status" style="flex: 1 1 8%;" />
    <input type="text" name="eid" placeholder="EID" required style="flex: 1 1 8%;" />
    <input type="text" name="name" placeholder="Name" required style="flex: 1 1 10%;" />
    <input type="text" name="ss" placeholder="SS No" style="flex: 1 1 10%;" />
    <input type="date" name="birth" placeholder="Birthday" style="flex: 1 1 10%;" />
    <input type="email" name="email" placeholder="Email" style="flex: 1 1 13%;" />
    <input type="text" name="phone" placeholder="Phone" style="flex: 1 1 10%;" />
    <input type="text" name="jcode" placeholder="Job Code" style="flex: 1 1 8%;" />
    <input type="text" name="jtitle" placeholder="Job Title" style="flex: 1 1 10%;" />
    <input type="date" name="sdate" placeholder="Start Date" style="flex: 1 1 10%;" />
    <input type="date" name="edate" placeholder="End Date" style="flex: 1 1 10%;" />
    <input type="number" name="sick" placeholder="Sick Days" style="flex: 1 1 6%;" />
    <input type="text" name="work1" placeholder="Work Type" style="flex: 1 1 8%;" />
    <input type="text" name="address" placeholder="Address" style="flex: 1 1 20%;" />
    <input type="text" name="city" placeholder="City" style="flex: 1 1 10%;" />
    <input type="text" name="state" placeholder="State" style="flex: 1 1 6%;" />
    <input type="text" name="zip" placeholder="Zip Code" style="flex: 1 1 10%;" />
    <input type="text" name="remark" placeholder="Remark" style="flex: 1 1 30%;" />
  </form>

  <!-- 버튼 영역 복구 -->
  <div style="display: flex; justify-content: center; align-items: center; gap: 1rem; flex-wrap: wrap; margin-top: 1rem;">
    <button type="button" onclick="clearFormInputs()">🧹 입력초기화</button>
    <button form="employeeForm" type="submit" title="Add">➕ 입력저장</button>
    <input type="text" id="selectedEidInput" name="selectedEid" placeholder="EID 입력" style="padding: 0.3rem;" />
    <button type="button" onclick="selectEmployee()">🔍 선택</button>
    <button type="button" onclick="prepareEdit(event)">✏️ 수정</button>
    <button type="button" onclick="prepareDelete()">🗑️ 삭제</button>
    <button type="button" onclick="viewEmployee()">📋 보기</button>
    <button type="button" onclick="printEmployee()">📋 출력</button>
  </div>
</div>
<!-- ✅ 하단 Employee List -->
<div class="bottom-section">
  <div class="table-header">
    <div style="display: flex; align-items: center; gap: 1rem;">
      <h2>Employee List</h2>
      <button type="button" onclick="showInactive()">Inactive</button>
      <button type="button" id="activeButton" onclick="showActive()" style="display: none;">Active</button>
    </div>
    <div>
      <button onclick="window.open('/employees/pdf-view', '_blank')">📄 View PDF</button>
      <button onclick="window.open('/employees/pdf-print', '_blank')">🖨️ Print PDF</button>
    </div>
  </div>

  <div style="max-height: 460px; overflow-y: auto; border: 1px solid #ccc;">
    <table id="employeeTable" class="compact-table">
      <thead>
        <tr>
          <th class="id-col">ID</th>
          <th>Status</th>
          <th>EID</th>
          <th class="name-col">Name</th>
          <th>SS No</th>
          <th class="date-col">Birthday</th>
          <th class="email-col">Email</th>
          <th>Phone</th>
          <th>Job Code</th>
          <th>Job Title</th>
          <th class="date-col">Start</th>
          <th class="date-col">End</th>
          <th>Sick</th>
          <th>Work</th>
          <th class="address-col">Address</th>
          <th>City</th>
          <th>State</th>
          <th>Zip</th>
          <th>Remark</th>
        </tr>
      </thead>
      <tbody>
        <% if (employees && employees.length > 0) { %>
          <% employees.forEach(emp => { %>
            <tr>
              <td class="id-col"><%= emp.id %></td>
              <td><%= emp.status || '' %></td>
              <td><%= emp.eid || '' %></td>
              <td class="name-col"><%= emp.name || '' %></td>
              <td><%= emp.ss || '' %></td>
              <td class="date-col"><%= emp.birth ? new Date(emp.birth).toLocaleDateString('en-US') : '' %></td>
              <td class="email-col"><%= emp.email || '' %></td>
              <td><%= emp.phone || '' %></td>
              <td><%= emp.jcode || '' %></td>
              <td><%= emp.jtitle || '' %></td>
              <td class="date-col"><%= emp.sdate ? new Date(emp.sdate).toLocaleDateString('en-US') : '' %></td>
              <td class="date-col"><%= emp.edate ? new Date(emp.edate).toLocaleDateString('en-US') : '' %></td>
              <td><%= emp.sick || '' %></td>
              <td><%= emp.work1 || '' %></td>
              <td class="address-col"><%= emp.address || '' %></td>
              <td><%= emp.city || '' %></td>
              <td><%= emp.state || '' %></td>
              <td><%= emp.zip || '' %></td>
              <td><%= emp.remark || '' %></td>
            </tr>
          <% }) %>
        <% } else { %>
          <tr><td colspan="19">직원 정보가 없습니다.</td></tr>
        <% } %>
      </tbody>
    </table>
  </div>
</div>
<!-- ✅ JavaScript 전체 스크립트 -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    filterEmployeeTable("active"); // 처음 로딩할 때 active만 보여줌
  });

  // 입력값 초기화
  function clearFormInputs() {
    const form = document.getElementById("employeeForm");
    if (!form) return;
    const inputs = form.querySelectorAll("input[type='text'], input[type='email'], input[type='date'], input[type='number']");
    inputs.forEach(input => input.value = "");
  }

  // Employee 테이블 필터링 (active / inactive)
  function filterEmployeeTable(status) {
    const rows = document.querySelectorAll("#employeeTable tbody tr");
    rows.forEach(row => {
      const statusCell = row.querySelector("td:nth-child(2)");
      if (!statusCell) return;
      const cellValue = statusCell.innerText.trim().toLowerCase();
      row.style.display = (cellValue === status.toLowerCase()) ? "" : "none";
    });
  }

  function showInactive() {
    filterEmployeeTable("inactive");
    document.getElementById("activeButton").style.display = "inline-block";
  }

  function showActive() {
    filterEmployeeTable("active");
    document.getElementById("activeButton").style.display = "none";
  }

  // 선택한 EID 찾기
  function selectEmployee() {
    const eidInput = document.getElementById("selectedEidInput");
    const eidValue = eidInput.value.trim();
    const rows = document.querySelectorAll("#employeeTable tbody tr");
    let found = false;

    rows.forEach(row => {
      const eidCell = row.cells[2];
      if (eidCell && eidCell.innerText.trim() === eidValue) {
        found = true;
        row.style.backgroundColor = "#ffff99"; // 선택된 줄 강조
        const fieldMap = ["status", "eid", "name", "ss", "birth", "email", "phone", "jcode", "jtitle", "sdate", "edate", "sick", "work1", "address", "city", "state", "zip", "remark"];
        fieldMap.forEach((field, i) => {
          const input = document.querySelector(`input[name="${field}"]`);
          const cell = row.cells[i + 1];
          if (input && cell) {
            let value = cell.innerText.trim();
            if (input.type === "date" && value.includes("/")) {
              const parts = value.split("/");
              if (parts.length === 3) {
                value = `${parts[2]}-${parts[0].padStart(2, '0')}-${parts[1].padStart(2, '0')}`;
              }
            }
            input.value = value;
          }
        });
      } else {
        row.style.backgroundColor = "";
      }
    });

    if (!found) alert("해당 EID를 가진 직원을 찾을 수 없습니다.");
  }

  // 수정하기
  function prepareEdit(event) {
    event.preventDefault();
    const eid = document.querySelector('input[name="eid"]').value.trim();
    if (!eid) {
      alert("수정할 직원의 EID를 먼저 입력하거나 선택해주세요.");
      return;
    }
    const form = document.getElementById("employeeForm");
    form.action = `/admin/payroll/payroll_employees/edit/${eid}`;
    form.submit();
  }

  // 삭제하기
  function prepareDelete() {
    const eid = document.querySelector('input[name="eid"]').value.trim();
    if (!eid) {
      alert("삭제할 직원의 EID를 먼저 입력하거나 선택해주세요.");
      return;
    }
    const confirmDelete = confirm(`정말 삭제하시겠습니까? EID: ${eid}`);
    if (!confirmDelete) return;

    fetch(`/admin/payroll/payroll_employees/delete/${eid}`, {
      method: 'POST'
    })
    .then(response => response.text())
    .then(html => {
      document.open();
      document.write(html);
      document.close();
    })
    .catch(error => {
      console.error('삭제 요청 실패:', error);
      alert('직원 삭제 중 오류가 발생했습니다.');
    });
  }

  // 보기
  function viewEmployee() {
    const eid = document.querySelector('input[name="eid"]').value.trim();
    if (!eid) {
      alert("출력할 직원의 EID를 먼저 입력하거나 선택해주세요.");
      return;
    }
    window.open(`/view-one/${eid}`, '_blank');
  }

  // 출력
  function printEmployee() {
    const eid = document.querySelector('input[name="eid"]').value.trim();
    if (!eid) {
      alert("출력할 직원의 EID를 먼저 입력하거나 선택해주세요.");
      return;
    }
    window.open(`/print/${eid}`, '_blank');
  }
</script>

</body>
</html>
